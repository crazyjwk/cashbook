<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.cashbook.mapper.CashMapper">
	<!-- 강제탈퇴 전 가계부 삭제  -->
	<delete id="deleteCashbookBeforeOut" parameterType="String">
		DELETE FROM cashbook_cashbook
		WHERE member_id=#{memberId}
	</delete>
	<!-- 강제탈퇴 전 수입/지출 삭제 -->
	<delete id="deleteCashBeforeOut" parameterType="String">
		DELETE FROM cashbook_cash
		WHERE member_id=#{memberId}
	</delete>
	<!-- 회원탈퇴 전 가계부 삭제  -->
	<delete id="deleteCashbookBeforeSignout" parameterType="com.gdu.cashbook.vo.LoginMember">
		DELETE FROM cashbook_cashbook
		WHERE member_id=#{memberId}
	</delete>
	<!-- 회원탈퇴 전 수입/지출 삭제 -->
	<delete id="deleteCashBeforeSignout" parameterType="com.gdu.cashbook.vo.LoginMember">
		DELETE FROM cashbook_cash
		WHERE member_id=#{memberId}
	</delete>
	<!-- 월별비교 월의 총 합계 구하는 쿼리 -->
	<select id="selectTotalMonthSum" resultType="Integer" parameterType="HashMap">
		SELECT 
			sum(case when cash_kind='지출' then cash_price*-1 ELSE cash_price END)
		FROM cashbook_cash
		WHERE member_id=#{memberId}
		AND cashbook_no =#{cashbookNo}
		AND YEAR(cash_date) = YEAR(#{day})
		GROUP BY YEAR(cash_date) = YEAR(#{day})
	</select>
	<!-- 가계부 생성 쿼리 -->
	<insert id="insertCashBook" parameterType="com.gdu.cashbook.vo.Cashbook">
		INSERT INTO cashbook_cashbook
		(
			member_id,
			cashbook_title,
			cashbook_date,
			cashbook_goal
		)
		VALUES (#{memberId}, #{cashbookTitle}, #{cashbookDate}, #{cashbookGoal})
	</insert>
	<!-- total row를 구하는 쿼리 -->
	<select id="cashbookTotalRow" resultType="int" parameterType="String">
		SELECT 
			COUNT(*)
		FROM cashbook_cashbook
		WHERE member_id=#{memberId}
	</select>
	<!-- 가계부 리스트 쿼리 -->
	<select id="selectCashbookList" resultType="com.gdu.cashbook.vo.Cashbook" parameterType="HashMap">
		SELECT 
			cashbook_no cashbookNo,
			member_id memberId,
			cashbook_title cashbookTitle,
			cashbook_date cashbookDate,
			cashbook_goal cashbookGoal,
			cashbook_img cashbookImg
		FROM cashbook_cashbook
		WHERE member_id=#{memberId}
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	<!-- 월별 비교에서 월별 합계 -->
	<select id="selectDaySum" resultType="com.gdu.cashbook.vo.dayAndMonthAndYearAndPrice" parameterType="HashMap">
		SELECT 
			MONTH(cash_date) month, 
			sum(case when cash_kind='지출' then cash_price*-1 ELSE cash_price END) price
		FROM cashbook_cash
		WHERE member_id=#{memberId} 
		AND cashbook_no =#{cashbookNo}
		AND YEAR(cash_date)= YEAR(#{day})
		AND MONTH(cash_date)
		GROUP BY MONTH(cash_date)
	</select>
	<!-- 달력에 일의 총 합계를 -->
	<select id="selectTotalDateSum" resultType="Integer" parameterType="HashMap">
		SELECT 
			sum(case when cash_kind='지출' then cash_price*-1 ELSE cash_price END)
		FROM cashbook_cash
		WHERE member_id=#{memberId}
		AND cashbook_no =#{cashbookNo}
		AND YEAR(cash_date)=#{year}
		AND MONTH(cash_date)=#{month}
	</select>
	<!-- 수입/지출 수정 쿼리 -->
	<update id="updateCash" parameterType="com.gdu.cashbook.vo.Cash">
		UPDATE cashbook_cash 
		SET 
			category_name=#{categoryName},
			cash_date=#{cashDate}, 
			cash_kind=#{cashKind}, 
			cash_price=#{cashPrice},
			cash_place=#{cashPlace},
			cash_memo=#{cashMemo}
		WHERE cash_no=#{cashNo}
		AND cashbook_no=#{cashbookNo}
	</update>
	<!-- 수입/지출 수정하기 위해 가지고 오는 쿼리 -->
	<select id="selectCashOne" resultType="com.gdu.cashbook.vo.Cash" parameterType="int">
		SELECT 
			member_id memberId,
			cashbook_no cashbookNo,
			cash_date cashDate,
			cash_price cashPrice,
			cash_place cashPlace,
			cash_memo cashMemo
		FROM cashbook_cash
		WHERE cash_no=#{cashNo}
	</select>
	<select id="selectCategoryList" resultType="com.gdu.cashbook.vo.Category" parameterType="com.gdu.cashbook.vo.Category">
		SELECT
			category_name categoryName
		FROM cashbook_category
	</select>
	<!-- 달력에 일별 합계 -->
	<select id="selectDayAndPrice" resultType="com.gdu.cashbook.vo.dayAndMonthAndYearAndPrice" parameterType="java.util.Map">
		SELECT
			DAY(cash_date) AS day, 
			SUM(CASE WHEN cash_kind='지출' THEN cash_price*-1 ELSE cash_price END) AS price,
			cash_date AS date
		FROM cashbook_cash
		WHERE YEAR(cash_date) = #{year}
		AND MONTH(cash_date) = #{month}
		AND member_id = #{memberId}
		AND cashbook_no =#{cashbookNo}
		GROUP BY DAY(cash_date)
	</select>
	<!-- 수입/지출 입력 -->
	<insert id="insertCash" parameterType="com.gdu.cashbook.vo.Cash">
		INSERT INTO cashbook_cash
		(
			member_id, 
			cashbook_no,
			cash_date, 
			cash_kind, 
			category_name, 
			cash_price, 
			cash_place, 
			cash_memo
		)
		VALUES(#{memberId}, #{cashbookNo}, #{cashDate}, #{cashKind}, #{categoryName}, #{cashPrice}, #{cashPlace}, #{cashMemo})
	</insert>
	<!-- 수입/지출 삭제 -->
	<delete id="deleteCash" parameterType="int">
		DELETE FROM cashbook_cash
		WHERE cash_no = #{cashNo}
		AND cashbook_no = #{cashbookNo}
	</delete>
	<!-- 특정 회원, 날짜를 통해서 그날 수입/지출의 합계를 가지고 오는 쿼리 -->
	<select id="selectSumCashByDate" resultType="Integer" parameterType="com.gdu.cashbook.vo.Cash">
		SELECT 
			SUM(CASE WHEN cash_kind='지출' THEN cash_price*-1 ELSE cash_price END)
		FROM cashbook_cash
		WHERE member_id = #{memberId}
		AND cashbook_no =#{cashbookNo}
		AND cash_date = #{cashDate}
	</select>
	<!--  
	<select id="selectSumCashByDate" resultType="int">
		(SELECT SUM(cash_price) FROM cash 
		WHERE member_id=#{memberId} AND cash_kind='수입' AND cash_date=#{cashDate})
		-
		(SELECT SUM(cash_price) FROM cash 
		WHERE member_id=#{memberId} AND cash_kind='지출' AND cash_date=#{cashDate})
		FROM dual
	</select>	
	-->
	<!-- 특정 회원, 날짜를 통해서 수입과 지출을 불러오는 쿼리 -->
	<select id="selectCashListByDate" resultType="com.gdu.cashbook.vo.Cash" parameterType="com.gdu.cashbook.vo.Cash">
		SELECT
			cash_no cashNo,
			cashbook_no cashbookNo,
			member_id memberId,
			cash_kind cashKind,
			category_name categoryName,
			cash_price cashPrice,
			cash_place cashPlace,
			cash_memo cashMemo
		FROM cashbook_cash 
		WHERE member_id = #{memberId}
		AND cashbook_no =#{cashbookNo}
		AND cash_date = #{cashDate}
		ORDER BY cash_no ASC
	</select>
</mapper>